name: $(BuildDefinitionName)_tag-$(BuildID)_at-$(Date:yyyyMMdd)$(Rev:.r)
resources:
  repositories:
  # Defult branch is master
    - repository: devopsTemplates
      type: github
      endpoint: DfE-Digital
      name: DFE-Digital/login.dfe.devops
      ref: feature/DSI-7328
    - repository: config
      type: github
      endpoint: DfE-Digital
      name: DFE-Digital/login.dfe.dsi-config
      ref: feature/DSI-7328

trigger:
  branches:
    include:
    - feature/*
    - main
    - release/*

pr:
  branches:
    include:
    - main

parameters:
- name: location
  type: object
  displayName: 'Deployment locations (- westeurope & - northeurope)'
  default:
    - westeurope
    - northeurope
- name: shaUse
  type: boolean
  displayName: "Use Self Host agent"
  default: true
- name: slotDeploy
  type: boolean
  displayName: "Slot Deployment"
  default: true
- name: InfrDeploy
  type: boolean
  displayName: 'Infrastrucure Deployment only'
  default: false
- name: tran
  type: boolean
  displayName: 'Transformation Deployment'
  default: false
- name: dev
  type: boolean
  displayName: 'Dev Deployment'
  default: false
- name: test
  type: boolean
  displayName: 'Test Deployment'
  default: false
- name: pp
  type: boolean
  displayName: 'Pre-Prod Deployment'
  default: false
- name: pr
  type: boolean
  displayName: 'Prod Deployment'
  default: false
- name: gitCheck
  type: boolean
  displayName: 'Bypass Git Check in Test'
  default: false


variables:
- group: dsi-global
- name: applicationShortName
  value: 'svc'
- name: applicationFullName
  value: 'services'
- name: numberOfWorkers
  value: 1
- name: SourceVersionMessage
  value: variables['Build.SourceVersionMessage']
- name: tran
  value: true #${{ eq(parameters.tran, 'true') }}
- name: dev
  value: ${{ or(eq(parameters.dev, 'true'), contains(variables['Build.SourceBranch'],'feature1')) }}
- name: test
  value: ${{ or(eq(parameters.test, 'true'), contains(variables['Build.SourceBranch'],'feature1')) }}
- name: pp
  value: ${{ and(or(eq(parameters.pp, 'true'), contains(variables['Build.SourceBranch'],'main')), not(contains(variables['Build.SourceVersionMessage'],'Upgrade to version'))) }}
- name: pr
  value: ${{ or(eq(parameters.pr, 'true'), contains(variables['Build.SourceBranch'],'release')) }}
- name: ContRegServerDev
  value: ${{ or(or(eq(variables.tran, 'true'), eq(variables.dev, 'true')), and(contains(variables['Build.SourceVersionMessage'],'Merge pull request'), contains(variables['Build.SourceVersionMessage'],'feature'))) }}
- name: ContRegServerTest
  value: ${{ or(eq(variables.test, 'true'), eq(variables.pp, 'true')) }}
- name: ContRegServerProd
  value: ${{ or(eq(variables.pr, 'true'), and(contains(variables['Build.SourceVersionMessage'],'Merge pull request'), contains(variables['Build.SourceVersionMessage'],'release'))) }}




stages:

# Code Scans & Build the artifact for deployment
- stage: scanBuildApp
  displayName: "Scan tools & Build"
  jobs:

  - template:  pipeline/scanTools.yml@devopsTemplates
    parameters:
      npmInstCmd: 'install --force --json --no-package-lock'
      AppDeploy: ${{ not(parameters.InfrDeploy) }}

  - ${{ if not(eq(parameters.InfrDeploy, 'true')) }}:
    - template: pipeline/buildAzureAppServices.yml@devopsTemplates
      parameters:
        applicationName: ${{variables.applicationFullName}}
        custRegAuth: $(custRegAuth)
        ContRegServers:
          - ${{ if eq(variables.ContRegServerDev, 'true') }}:
            - $(platformGlobalIdentifier)d03$(platformGlobalName)shdcr.azurecr.io
          - ${{ if eq(variables.ContRegServerTest, 'true') }}:
            - $(platformGlobalIdentifier)t02$(platformGlobalName)shdcr.azurecr.io
          - ${{ if eq(variables.ContRegServerProd, 'true') }}:
            - $(platformGlobalIdentifier)p01$(platformGlobalName)shdcr.azurecr.io
        nodeVersionSpec: '18.17.0'
        prMsg: variables['Build.SourceVersionMessage'] 


- ${{ each location in parameters.location }}:
  - ${{ each var in variables }}:
      - ${{ if and(or(and(in(var.key, 'tran','pp','pr'),eq(location, 'northeurope')),and(in(var.key, 'tran','dev','test','pp','pr'),eq(location, 'westeurope'))), eq(var.value, 'true')) }}:
        - stage: Deployment_${{var.key}}_${{location}}
          displayName: "Deployment [${{var.key}}] ${{location}}"
          dependsOn: 
          - scanBuildApp
          condition: in(dependencies.scanBuildApp.result, 'Succeeded', 'Skipped')
          variables:
          - name: secRegionId
            ${{ if eq(location, 'westeurope') }}:
              value: ''
            ${{ else }}:
              value: $(secondRegionId)
          jobs:
          - template: pipeline/deployAzureAppServices.yml@devopsTemplates
            parameters:
              ${{ if in(var.key, 'tran', 'dev') }}:
                serviceConnection: $(devServiceConnection)
                shaPool: Self-hosted Dev
                shaCode: d03
              ${{ elseif eq(var.key, 'pr') }}:
                serviceConnection: $(prodServiceConnection)
                shaPool: Self-hosted Prod
                shaCode: p01
              ${{ else }}:
                serviceConnection: $(testServiceConnection)
                shaPool: Self-hosted Test
                shaCode: t02
              devOpsEnv: $(secRegionId)${{var.key}}
              environmentName: ${{var.key}}
              applicationShortName: ${{variables.applicationShortName}}
              applicationFullName: ${{variables.applicationFullName}}
              releaseArtifactName: ${{variables.applicationShortName}}-${{var.key}}-$(Build.BuildId)-release
              InfrDeploy: ${{parameters.InfrDeploy}}
              deploymentLocation: ${{location}}
              gitCheck: ${{parameters.gitCheck}}
              tier: presentation
              tierPlan: prestier-g3
              shaUse: true
              slotDeploy: ${{parameters.slotDeploy}}
              appRepoName: ${{variables.applicationFullName}}
        
        - ${{ if and(eq(var.key, 'pr'),eq(location, 'westeurope')) }}:
          - stage: branchPrTag
            displayName: "GitHub PR & Release Branch Tag"
            dependsOn: 
            - Deployment_${{var.key}}_${{location}}
            jobs:
            - template:  pipeline/tagCreation.yml@devopsTemplates
              parameters:
                applicationName: ${{variables.applicationFullName}}